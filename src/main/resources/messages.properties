config.errorInDbProperties=Error in dbProperties
restful.loadDataForAllPackets=Load data for all packets
restful.loadDataForSpecificPacket=Load data for packet with id = {0}
restful.saveAllChangesToBaseForSpecificPacket=Save all changes to the database for the packet#{0}
restful.saveAllChangesToBaseForAllPackets=Save all changes to the database for all packets
packetAppDao.allPacketsLoadedMessage=All the packets loaded, their ids are the following: {0}
packetAppDao.allComptsSupplInfoLoadedMessage=All the comptsSupplInfo loaded, here they are: {0}
packetAppDao.allStatesLoadedMessage=All states loaded, here they are: {0}
packetAppDao.allComboDataLoadedMessage=All the comboData loaded, here they are: {0}
packetAppDao.allComptsFromGivenPacketLoadedMessage=Loaded compts for packet#{0}, here they are: {1}
packetAppDao.allComptsFromAllPacketsLoadedMessage=Loaded all compts from all packets, here they are: {0}
packetAppDao.allComboDataLabelsToIndicesMap=Map of comboData labels to indices: {0}
packetAppDao.statesTableIsEmpty=States table is empty, the following exception is thrown: {0} with the stacktrace: {1}
packetAppDao.comboDataTableIsEmpty=ComboData table is empty, the following exception is thrown: {0} \
  with the stacktrace: {1}
packetAppDao.nonExistingComboDataLabelErrorReport=Label {0} doesn't exist. So it's automatically replaced with the\
   following one: '{1}'
packetAppDao.nonExistingComboDataLabelErrorReport.comptUpdate=Compt#{0} update.
packetAppDao.nonExistingComboDataLabelErrorReport.addNewComptsToPersistedPacket=Adding new compts to the packet#{0}.
packetAppDao.nonExistingComboDataLabelErrorReport.addNewComptsToUnpersistedPacket=Adding new compts to the \
  non-persisted packet.
packetAppDao.comptUpdate.nonExistingCompt=The compt with id = {0} does not exist.
packetAppDao.comptUpdate.dataComptUpdate.successReport=Compt#{0} update: DataCompt updated widh id = {1}
packetAppDao.comptUpdate.successReport=Packet#{0}: List of the updated compts: {1}
packetAppDao.comptsDelete.nonExistingCompts=Can't delete any of the compts with the following ids \
  cause they don't exist: {0}
packetAppDao.comptsDelete.successReport=Successfully deleted compts with the following ids: {0}
packetAppDao.packetsDelete.nonExistingIds=Can't delete any of the packets with the following ids \
  cause they don't exist: {0}
packetAppDao.packetsDelete.successReport=Successfully deleted packets with the following ids: {0}
packetAppDao.packetUpdate.notExistingPacket=Packet updating. The packet with id = {0} does not exist.
packetAppDao.packetAddOrUpdate.addPacket.addCompts=Adding the packet. The following compts for the new packet were \
  added: {0}
packetAppDao.packetAddOrUpdate.updatePacket.addCompts=Packet updating. The following compts for the packet#{0} were \
  added: {1}
packetAppDao.packetAddOrUpdate.addPacket.successReport=Persisted new packet: {0}
packetAppDao.packetAddOrUpdate.updatePacket.successReport=Updated packet: {0}
packetAppDao.packetAddOrUpdate.updatePacket.updateState.successReport=Updating the packet. The state for the packet \
  with id = {0} was updated. The new state has the following id: {1}
packetAppDao.packetAddOrUpdate.addPacket.setState.successReport=Adding the packet. The state for the packet \
  with id = {0} was updated. The new state has the following id: {1}
packetAppDao.packetAddOrUpdate.updatePacket.updateState.notExistingState=Packet updating. Packet#{0}'s state \
  update. The state with id = {1} does not exist
packetAppDao.packetAddOrUpdate.addPacket.setState.nullState=Adding the packet. Setting state of the new packet. \
  The state new value is null. So it is automatically replaced with the {0}
packetAppDao.packetAddOrUpdate.updatePacket.updateState.notDifferentNewState=Packet updating. Packet#{0} is already in \
  state#{1} and there is no need to update this state.
packetAppDao.packetAddOrUpdate.addPacket.setState.notExistingState=Adding the packet. The state with id = {0} does \
   not exist. So it is automatically replaced with the {1}
packetAppDao.packetNotLoaded=Packet#{0} not loaded cause it was not found
packetAppDao.noPacketsLoaded=No packets loaded cause no packets were found
packetAppDao.userDataLoad.success=User data for the login {0} was loaded successfully
packetAppDao.userDataLoad.error=User data for the login {0} was not loaded due to the authentication error
comboData.toString=Combo data with id: '{0}' and label: '{1}'
compt.toString=Component with id: {0} and label: {1}\nand packet: {2}
comptInfo.toString=Compt Info with id: {0}, label: {1} and packet Id {2}
comptSupplInfo.checked.toString=ComptSupplInfo with compt Id: {0}, label: {1}, state Id: {2} and checked
comptSupplInfo.unchecked.toString=ComptSupplInfo with compt Id: {0}, label: {1}, state Id: {2} and unchecked
database.exception.message=Database exception occurred
emptyDbTable.exception.report=This necessary DB table is empty. DB save/update operation is therefore forbidden.
dataCompt.toString=Data Component with id: {0} and checked flag: {1}\nand component: {2}\nand state: {3}\n\
  and combo data: {4}
packet.toString=Packet with id: {0}\nand state: {1}
packetInfo.toString=Packet Info with id: {0} and state Id: {1}
state.toString=State with id: {0} and label: {1}
user.toString=User with name: {0} and role: {1}
packetParams.toString=PacketParams with id = {0} and stateId = {1} and comptParams: {2}
comptParams.toString=ComptParams with id = {0} and label = {1} and comboData values: {2}
packetAppService.loadDataForAllPackets=Load data for all packets
packetAppService.loadDataForSpecificPacket=Load data for packet#{0}
packetAppService.persistDataForAllPackets=Persist data for all packets
packetAppService.persistDataForSpecificPacket=Persist data for packet#{0}
packetAppService.updateCompts.exceptionReport=Exception occurred during saving the changes to the base \
  (packets adding): {0}\nStacktrace: {1}
packetAppService.updatePackets.exceptionReport=Exception occurred during saving the changes to the base \
  (packets update): {0}\nStacktrace: {1}
packetAppService.addPackets.exceptionReport=Exception occurred during saving the changes to the base \
  (packets adding): {0}\nStacktrace: {1}
loggingAspect.beforeDaoLogging=Before the DAO method execution: {0}\n with arguments: {1}
loggingAspect.beforeLogging=Before the {0} method execution: {1}
loggingAspect.afterLogging=After the {0} method execution: {1}




